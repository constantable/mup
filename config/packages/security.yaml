security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        ldap_user_provider:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: dc=example,dc=org
                search_dn: "cn=admin,dc=example,dc=org"
                search_password: adminpassword
                default_roles: ROLE_USER
                uid_key: uid
        chain_user_provider:
            chain:
                providers: [ 'ldap_user_provider', 'app_user_provider' ]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            anonymous: true
            provider: chain_user_provider
            form_login_ldap:
                login_path: login_ldap
                check_path: login_ldap
                service: Symfony\Component\Ldap\Ldap
                search_password: adminpassword
                search_dn: "cn=admin,dc=example,dc=org"
                dn_string: 'cn={username},ou=users,dc=example,dc=org'
            form_login:
                login_path: login
                check_path: login
            logout:
                path: app_logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
